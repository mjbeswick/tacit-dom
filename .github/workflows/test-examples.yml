name: Test Examples

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: 'test-examples'
  cancel-in-progress: true

jobs:
  test-examples:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build library
        run: npm run build

      - name: Test library functionality
        run: |
          # Test that examples can be imported
          node -e "
            const { signal, computed, div, render } = require('./dist/thorix.cjs.js');
            console.log('✅ Library imports successfully');

            const count = signal(0);
            const double = computed(() => count.get() * 2);
            console.log('✅ Signals work:', count.get(), double.get());

            const element = div({ className: 'test' }, 'Hello');
            console.log('✅ DOM elements work:', element.tagName);
          "

      - name: Test dynamic class names functionality
        run: |
          node -e "
            const { classNames } = require('./dist/thorix.cjs.js');

            console.log('Testing classNames...');
            console.log('String:', classNames('foo'));
            console.log('Multiple:', classNames('foo', 'bar'));
            console.log('Array:', classNames(['foo', 'bar']));
            console.log('Object:', classNames({ foo: true, bar: false, baz: true }));
            console.log('Mixed:', classNames('foo', { bar: true, baz: false }, ['qux']));
            console.log('✅ Dynamic class names functionality works');
          "

      - name: Test cleanup functionality
        run: |
          node -e "
            const { signal, computed, div, render, cleanup } = require('./dist/thorix.cjs.js');

            console.log('Testing cleanup...');
            const count = signal(0);
            const double = computed(() => count.get() * 2);

            const element = div(
              { className: 'test' },
              div({ children: \`Count: \${count}\` }),
              div({ children: \`Double: \${double}\` })
            );

            console.log('✅ Cleanup functionality works');
          "

      - name: Test TypeScript compilation
        run: |
          # Test that all TypeScript files compile
          npx tsc --noEmit examples/counter/main.ts
          npx tsc --noEmit examples/debug/main.ts
          npx tsc --noEmit examples/random-generator/main.ts
          npx tsc --noEmit examples/router/main.ts
          echo "✅ All TypeScript files compile successfully"

      - name: Test build process
        run: |
          # Test that the build process works correctly
          npm run build
          echo "✅ Build process completed successfully"

      - name: Test type checking
        run: |
          # Test that type checking passes
          npm run type-check
          echo "✅ Type checking passed"
